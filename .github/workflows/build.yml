name: Build artifacts

on:
  push:
    tags:
      - '*'

  workflow_dispatch:

jobs:
  # linux-x86_64:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: restore zig-cache
  #       id: cache-zig-restore
  #       uses: actions/cache/restore@v3
  #       with:
  #         path: |
  #           zig-cache
  #         key: ${{ runner.os }}-zig-cache-${{ github.run_id }}
  #         restore-keys: |
  #           ${{ runner.os }}-zig-cache
  #     - name: build seamstress
  #       run: |
  #         bash ci/ubuntu.sh
  #     - name: save zig-cache
  #       id: cache-zig-save
  #       uses: actions/cache/save@v3
  #       with:
  #         path: |
  #           zig-cache
  #         key: ${{ runner.os }}-zig-cache-${{ github.run_id }}
  #     - name: zip artifact
  #       run: |
  #         cd zig-out/ && tar -czvf ../seamstress-linux-x86_64-${{ github.ref_name }}.tar.gz .
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: linux-x86_64-${{ github.ref_name }}
  #         path: |
  #           ./*.tar.gz
  # macos-x86_64:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: Homebrew/actions/setup-homebrew@master
  #     - name: restore zig-cache
  #       id: cache-zig-restore
  #       uses: actions/cache/restore@v3
  #       with:
  #         path: |
  #           zig-cache
  #         key: ${{ runner.os }}-zig-cache-${{ github.run_id }}
  #         restore-keys: |
  #           ${{ runner.os }}-zig-cache
  #     - name: build seamstress
  #       run: |
  #         bash ci/macos-11.sh
  #     - name: save zig-cache
  #       id: cache-zig-save
  #       uses: actions/cache/save@v3
  #       with:
  #         path: |
  #           zig-cache
  #         key: ${{ runner.os }}-zig-cache-${{ github.run_id }}
  #     - name: zip artifact
  #       run: |
  #         cd zig-out/ && zip -r9 ../seamstress-macos-x86_64-${{ github.ref_name }}.zip .
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: macos-x86_64-${{ github.ref_name }}
  #         path: |
  #           ./*.zip

  windows:
    runs-on: windows-latest
    strategy:
        matrix:
          include:
            - { sys: mingw64, env: x86_64 }
    defaults:
      run:
        # shell: C:\msys64\msys2.exe {0}
        shell: bash
    steps:
      #- name: Put MSYS2_MinGW64 on PATH
      #  #run: echo "D:/a/_temp/msys64/mingw64/bin" >> $GITHUB_PATH
      #  run: echo "C:/msys64/mingw64/bin" >> $GITHUB_PATH
      - name: update msys2 packages
        run: |
          # $env:PATH = "C:\msys64\bin;C:\msys64\usr\bin;$env:PATH"
          pacman --noconfirm -Suy
      - name: install bash
        run: |
          # $env:PATH = "C:\msys64\bin;C:\msys64\usr\bin;$env:PATH"
          pacman --noconfirm -S bash
      - name: which gcc
        run: |
          gcc --version
      - name: ls bin
        run: |
          # $env:PATH = "C:\msys64\bin;;C:\msys64\usr\bin;$env:PATH"
          ls C:\msys64\mingw64\bin\
      # - uses: msys2/setup-msys2@v2
      #   with:
      #     update: true
      #     msystem: ${{matrix.sys}}
      #     install: >-
      #       wget
      #       unzip
      #       mingw-w64-${{matrix.env}}-pkg-config
      #       mingw-w64-${{matrix.env}}-dlfcn
      #       mingw-w64-${{matrix.env}}-liblo
      #       mingw-w64-${{matrix.env}}-rtmidi
      #       mingw-w64-${{matrix.env}}-SDL2
      #       mingw-w64-${{matrix.env}}-SDL2_ttf
      #       mingw-w64-${{matrix.env}}-SDL2_image
      #       mingw-w64-${{matrix.env}}-readline
      #       mingw-w64-${{matrix.env}}-winpthreads-git
      #   # MKlink /D C:\msys64 D:\a\_temp\msys64

      # - uses: actions/checkout@v3
      # # - name: download zig
      # #   run: |
      # #     wget https://ziglang.org/download/0.11.0/zig-windows-${{matrix.env}}-0.11.0.zip
      # - name: build seamstress
      #   run: |
      #     bash ci/windows.sh

  # release:
  #   runs-on: ubuntu-latest
  #   needs: [macos-x86_64,linux-x86_64]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #     - uses: softprops/action-gh-release@v1
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         draft: true
  #         files: |
  #           ./macos-x86_64-${{ github.ref_name }}/*.zip
  #           ./linux-x86_64-${{ github.ref_name }}/*.tar.gz
